'use strict';

const request = require('request');

const log_error = require('debug')('mw-automagic-client:automagic:error');
const log_debug = require('debug')('mw-automagic-client:automagic:debug');


const BASE_URL = 'http://info.update.sony.net/';
const CATEGORY_ID = 'DR001';
const SERVICE_ID_DEVICE = 'DPTRP1';
const SERVICE_ID_APP_WIN = 'DigitalPaperApp_W';
const SERVICE_ID_APP_MAC = 'DigitalPaperApp_M';

const LANGUAGE_CODE_JA = 'JAPANESE';
const LANGUAGE_CODE_EN = 'ENGLISH';

const LOCALE_CODE_JP = 'JAPAN';
const LOCALE_CODE_US = 'US';


class AutoMagic {

  /**
   * デバイスの「Category ID」を取得する。
   */
  static get CATEGORY_ID() {
    return CATEGORY_ID;
  }

  /**
   * デバイスの「Service ID」を取得する。
   */
  static get SERVICE_ID_DEVICE() {
    return SERVICE_ID_DEVICE;
  }

  /**
   * アプリの「Service ID」を取得する。
   */
  static get SERVICE_ID_APP() {
    switch (process.platform) {
      case 'win32':
        return SERVICE_ID_APP_WIN;
      case 'darwin':
        return SERVICE_ID_APP_MAC;
      default:
        const error = new Error('[ERROR] unsupported platform : ' + process.platform);
        log_error(error);
        throw error;
    }
  }

  /**
   * アプリの「アップデート情報ファイル」のURLを取得する。
   */
  static get URL_APP_UPDATE_INFO_XML() {
    return BASE_URL + this.CATEGORY_ID + '/' + this.SERVICE_ID_APP + '/info/info.xml';
  }

  /**
   * デバイスの「アップデート情報ファイル」のURLを取得する。
   */
  static get URL_DEVICE_UPDATE_INFO_XML() {
    return BASE_URL + this.CATEGORY_ID + '/' + this.SERVICE_ID_DEVICE + '/info/info.xml';
  }

  /**
   * アプリのアップデート確認用の「User-Agent」を取得する。
   */
  static getUserAgentForAppUpdate(appVersion, newVersion) {
    return this.getUserAgent(appVersion, 'DigitalPaperApp', newVersion);
  }

  /**
   * デバイスのアップデート確認用の「User-Agent」を取得する。
   */
  static getUserAgentForDeviceUpdate(appVersion, newVersion) {
    return this.getUserAgent(appVersion, 'DigitalPaper', newVersion);
  }

  /**
   * 「User-Agent」を取得する。
   * @private
   */
  static getUserAgent(appVersion, software, newVersion) {
    if (!newVersion) {
      newVersion = '';
    }
    const debug = process.env.MW_DEBUG_AUTO_MAGIC ? '-DaM_uAS-' : '';
    return 'DPA_' + appVersion + '#' + software + '#' + newVersion + '#00#' + debug + '#http.status.0#';
  }

  /**
   * アプリの言語設定から
   * 「Auto Magic 言語コード」（大文字）を取得する。
   */
  static getLanguageCode(appLanguage) {
    switch (appLanguage) {
      case 'Japanese':
        return LANGUAGE_CODE_JA;
      case 'English':
        return LANGUAGE_CODE_EN;
      default:
        return null;
    }
  }

  /**
   * Win/Macのロケール情報から
   * 「Auto Magic ロケールコード」（大文字）を取得する。
   */
  static getLocaleCode(osLocale) {
    if (osLocale.endsWith('_JP')) {
      return LOCALE_CODE_JP;
    }
    if (osLocale.endsWith('_US')) {
      return LOCALE_CODE_US;
    }
    return null;
  }

  /**
   * デバイスのSKUコードから
   * 「Auto Magic ロケールコード」（大文字）を取得する。
   */
  static getLocaleCodeBySku(skuCode) {
    switch (skuCode) {
      case 'J':
        return LOCALE_CODE_JP;
      case 'U':
        return LOCALE_CODE_US;
      default:
        return null;
    }
  }
}


module.exports = AutoMagic;
